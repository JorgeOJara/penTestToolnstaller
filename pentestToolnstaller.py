import subprocess
import time
from tqdm import tqdm

def log(message):
    """Print a log message with a timestamp."""
    print(f"[{time.strftime('%Y-%m-%d %H:%M:%S')}] {message}")

def run_command(command, description="Processing", timeout=None):
    """Run a shell command and print the output with a progress bar."""
    log(f"Starting: {description} - Command: {command}")
    with tqdm(total=1, desc=description) as pbar:
        try:
            result = subprocess.run(command, shell=True, check=True, text=True, capture_output=True, timeout=timeout)
            pbar.update(1)
            log(f"Completed: {description} - Command: {command}")
            print(result.stdout)
        except subprocess.TimeoutExpired:
            log(f"Timeout: {description} - Command: {command}")
            print(f"Command '{command}' timed out.")
            pbar.update(1)
        except subprocess.CalledProcessError as e:
            log(f"Error: {description} - Command: {command}")
            print(f"Error occurred: {e.stderr}")
            pbar.update(1)

def install_metasploit():
    log("Starting Metasploit installation process.")

    # Download Metasploit installer
    run_command("curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall", 
                description="Downloading Metasploit installer")

    # Set permissions on the installer script
    run_command("chmod 755 msfinstall", description="Setting permissions on Metasploit installer")

    # Run the installer script
    run_command("./msfinstall", description="Installing Metasploit (msfconsole)")

    log("Metasploit installation process completed.")

def install_nmap():
    log("Starting Nmap installation process.")

    # Install Nmap
    run_command("apt-get update && apt-get install -y nmap", description="Installing Nmap")

    log("Nmap installation process completed.")

if __name__ == "__main__":
    log("Script started.")
    install_metasploit()
    install_nmap()
    log("Script finished.")
