import subprocess
import os
import shutil

def run_command(command):
    """Run a shell command and print the output."""
    try:
        result = subprocess.run(command, shell=True, check=True, text=True, capture_output=True)
        print(result.stdout)
    except subprocess.CalledProcessError as e:
        print(f"Error occurred: {e.stderr}")

def is_installed(package_name):
    """Check if a package is installed."""
    try:
        subprocess.run([package_name, '--version'], check=True, text=True, capture_output=True)
        return True
    except subprocess.CalledProcessError:
        return False
    except FileNotFoundError:
        return False

def ensure_clean_directory(path):
    """Ensure the directory is empty, if it exists. If it does not exist, create it."""
    if os.path.exists(path):
        print(f"Directory {path} already exists. Clearing its contents...")
        shutil.rmtree(path)  # Remove the directory and all its contents
    os.makedirs(path)  # Recreate the directory

def install_tools():
    # Update package lists
    run_command("apt-get update")
    
    # Check if git is installed; if not, install it
    if not is_installed("git"):
        print("Git is not installed. Installing git...")
        run_command("apt-get install -y git")
    else:
        print("Git is already installed.")

    # Ensure the /opt/ptf directory is clean
    ptf_directory = "/opt/ptf"
    ensure_clean_directory(ptf_directory)
    
    # Clone PenTesters Framework (PTF)
    run_command(f"git clone https://github.com/trustedsec/ptf {ptf_directory}")

    # Navigate to the PTF directory
    run_command(f"cd {ptf_directory} && ./ptf")
    
    # Install various modules
    modules = [
        "exploitation/install_update_all",
        "intelligence-gathering/install_update_all",
        "post-exploitation/install_update_all",
        "powershell/install_update_all",
        "vulnerability-analysis/install_update_all"
    ]
    
    for module in modules:
        run_command(f"use modules/{module}")

    # Change directory to /pentest
    run_command("cd /pentest")

if __name__ == "__main__":
    install_tools()
